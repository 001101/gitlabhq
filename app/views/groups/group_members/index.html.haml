- page_title "Members"
- header_title group_title(@group, "Members", group_group_members_path(@group))
- @blank_container = true

.group-members-page
  - if current_user && current_user.can?(:admin_group_member, @group)
<<<<<<< HEAD
    .pull-right
      - if @group.ldap_synced?
        = form_tag(reset_access_group_ldap_path(@group), method: :put, class: 'inline') do
          = button_to 'Clear LDAP permission cache', '#', class: "btn btn-remove js-confirm-danger",
            data: { "confirm-danger-message" => clear_ldap_permission_cache_message,
                    'warning-message' => 'If you made manual permission tweaks for some group members they will be lost.' }

      = button_tag class: 'btn btn-new js-toggle-button', type: 'button' do
        Add members
        %i.fa.fa-chevron-down

    .js-toggle-content.hide.new-group-member-holder
      = render "new_group_member"

- if @group.ldap_synced?
  .bs-callout.bs-callout-info
    The members of this group are managed using LDAP and cannot be added, changed or removed here.
    Because LDAP permissions in GitLab get updated one user at a time and because GitLab caches LDAP check results, changes on your LDAP server or in this group's LDAP sync settings may take up to #{Gitlab.config.ldap['sync_time']}s to show in the list below.
    %ul
      - @group.ldap_group_links.each do |ldap_group_link|
        %li
          People in cn
          %code= ldap_group_link.cn
          are given
          %code= ldap_group_link.human_access
          access.

.panel.panel-default.prepend-top-20
  .panel-heading
    %strong #{@group.name}
    group members
    %small
      (#{@members.total_count})
  %ul.well-list
    - @members.each do |member|
      = render 'groups/group_members/group_member', member: member, show_controls: true

= paginate @members, theme: 'gitlab'
= render 'shared/confirm_modal', phrase: 'reset'
=======
    .panel.panel-default
      .panel-heading
        Add new user to group
      .panel-body
        - if should_user_see_group_roles?(current_user, @group)
          %p.light
            Members of group have access to all group projects.
        .new-group-member-holder
          = render "new_group_member"

  .panel.panel-default
    .panel-heading
      %strong #{@group.name}
      group members
      %small
        (#{@members.total_count})
      .pull-right
        = form_tag group_group_members_path(@group), method: :get, class: 'form-inline member-search-form'  do
          .form-group
            = search_field_tag :search, params[:search], { placeholder: 'Find existing member by name', class: 'form-control', spellcheck: false }
          = button_tag class: 'btn', title: 'Search' do
            = icon("search")
    %ul.content-list
      - @members.each do |member|
        = render 'groups/group_members/group_member', member: member, show_controls: true
    = paginate @members, theme: 'gitlab'
>>>>>>> origin/master

:javascript
  $('form.member-search-form').on('submit', function(event) {
    event.preventDefault();
    Turbolinks.visit(this.action + '?' + $(this).serialize());
  });
