- page_title "Members"
- show_roles = should_user_see_group_roles?(current_user, @group)

%h3.page-title
  Group members
- if show_roles
  %p.light
    Members of group have access to all group projects.
    Read more about permissions
    %strong= link_to "here", help_page_path("permissions", "permissions"), class: "vlink"

%hr

.clearfix.js-toggle-container
  = form_tag group_group_members_path(@group), method: :get, class: 'form-inline member-search-form'  do
    .form-group
      = search_field_tag :search, params[:search], { placeholder: 'Find existing member by name', class: 'form-control search-text-input input-mn-300' }
    = button_tag 'Search', class: 'btn'

  - if current_user && current_user.can?(:admin_group, @group)
    .pull-right
      - if ldap_enabled? && @group.ldap_group_links.any?
        = link_to reset_access_group_ldap_path(@group), class: 'btn btn-grouped', data: { confirm: "Force GitLab to do LDAP permission checks for all group members? All members besides yourself will be reduced to 'Guest' access until their next interaction with GitLab." }, method: :put do
          Clear LDAP permission cache

      = button_tag class: 'btn btn-new js-toggle-button', type: 'button' do
        Add members
        %i.fa.fa-chevron-down

    .js-toggle-content.hide.new-group-member-holder
      = render "new_group_member"

- if ldap_enabled? && @group.ldap_group_links.any?
  .bs-callout.bs-callout-info
    The members of this group are sync with LDAP.
    Because LDAP permissions in GitLab get updated one user at a time and because GitLab caches LDAP check results, changes on your LDAP server or in this group's LDAP sync settings may take up to #{Gitlab.config.ldap['sync_time']}s to show in the list below.
    %ul
      - @group.ldap_group_links.each do |ldap_group_link|
        %li
          People in cn
          %code= ldap_group_link.cn
          are given
          %code= ldap_group_link.human_access
          access.

.panel.panel-default.prepend-top-20
  .panel-heading
    %strong #{@group.name}
    group members
    %small
      (#{@members.total_count})
  %ul.well-list
    - @members.each do |member|
      = render 'groups/group_members/group_member', member: member, show_roles: show_roles, show_controls: true

= paginate @members, theme: 'gitlab'

:coffeescript
  $('form.member-search-form').on 'submit', (event) ->
    event.preventDefault()
    Turbolinks.visit @.action + '?' + $(@).serialize()
