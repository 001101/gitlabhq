- page_title "Container Images"
= render "header_title"

.light.prepend-top-default
  %p
    A 'container image' is a snapshot of a container.
    You can host your 'container images' with GitLab.
    %br
    To start using container images hosted on GitLab you first need to login:
    %pre
      %code
        docker login #{Gitlab.config.registry.host_port}
    %br
    Then you are free to create and upload a container images with build and push commands:
    %pre
      docker build -t #{Gitlab.config.registry.host_port}/#{@project.path_with_namespace} .
      %br
      docker push #{Gitlab.config.registry.host_port}/#{@project.path_with_namespace}

%hr

%ul.content-list
  - if @tags.blank?
    %li
      .nothing-here-block No images to show
  - else
    .table-holder
      %table.table.builds
        %thead
          %tr
            %th Name
            %th Digest
            %th Size
            %th Created
            %th

        - @tags.each do |tag|
          %tr
            %td
              #{tag.repository.name}:#{tag.name}
              = clipboard_button(clipboard_text: "docker pull #{Gitlab.config.registry.host_port}/#{tag.repository.name}:#{tag.name}")
            %td
              - if layer = tag.layers.first
                %span.has-tooltip(title="#{layer.revision}")
                  = layer.short_revision
              - else
                \-
            %td
              = number_to_human_size(tag.total_size)
              &middot;
              = pluralize(tag.layers.size, "layer")
            %td
              = time_ago_in_words(tag.created_at)
            %td.content
              .controls.hidden-xs.pull-right
                = link_to namespace_project_image_path(@project.namespace, @project, tag.name), class: 'btn btn-remove has-tooltip', title: "Remove", data: { confirm: "Are you sure?" }, method: :delete do
                  = icon("trash cred")
