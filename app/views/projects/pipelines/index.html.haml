- @no_container = true
- page_title "Pipelines"
= render "projects/pipelines/head"

%div{ class: container_class }
  .top-area
    %ul.nav-links
      %li{class: ('active' if @scope.nil?)}
        = link_to project_pipelines_path(@project) do
          All
          %span.badge.js-totalbuilds-count
            = number_with_delimiter(@pipelines_count)

      %li{class: ('active' if @scope == 'running')}
        = link_to project_pipelines_path(@project, scope: :running) do
          Running
          %span.badge.js-running-count
            = number_with_delimiter(@running_or_pending_count)

      %li{class: ('active' if @scope == 'branches')}
        = link_to project_pipelines_path(@project, scope: :branches) do
          Branches

      %li{class: ('active' if @scope == 'tags')}
        = link_to project_pipelines_path(@project, scope: :tags) do
          Tags

    .nav-controls
      - if can? current_user, :create_pipeline, @project
        = link_to new_namespace_project_pipeline_path(@project.namespace, @project), class: 'btn btn-create' do
          Run pipeline

        - unless @repository.gitlab_ci_yml
          = link_to 'Get started with Pipelines', help_page_path('ci/quick_start/README'), class: 'btn btn-info'

        = link_to ci_lint_path, class: 'btn btn-default' do
          %span CI Lint
  %div.content-list.pipelines{data: {url: namespace_project_pipelines_path(@project.namespace, @project, format: :json), "data-count": "#{@pipelines_count}"}}
    - if @pipelines.blank?
      %div
        .nothing-here-block No pipelines to show
    - elsif @scope == 'branches' || @scope == 'tags' || @scope == 'running'
      .table-holder
        %table.table.ci-table
          %thead
            %th Status
            %th Pipeline
            %th Commit
            %th Stages
            %th
            %th.hidden-xs

          = render @pipelines, commit_sha: true, stage: true, allow_retry: true
      = paginate @pipelines, theme: 'gitlab'
    - else
      .vue-pipelines-index

= page_specific_javascript_tag('vue_icons/index.js')
-# ^^ this component loads Vue so the rest don't
-#    this will no longer be an issue once Vue2 is global
= page_specific_javascript_tag('vue_pagination/index.js')
= page_specific_javascript_tag('vue_pipelines_status/index.js')
= page_specific_javascript_tag('vue_pipelines_index/index.js')
