- defaultLabel = 'Select'
- dropdownLabel = defaultLabel
- access_by_type = protected_branch.merge_access_level_frequencies

- if access_levels.present?
  - access_levels.map.with_index do |level, i|
    - if (level.type == :user)
      - fieldKey = 'user_id' 
      - value = level.user_id
    - else
      - fieldKey = 'access_level'
      - value = level.access_level
    %input{ type: 'hidden', name: "protected_branch[#{input_basic_name}][#{i}][#{fieldKey}]",
                            value: value, data: { type: level.type } }
  
  - dropdownLabel = [pluralize(access_by_type[:role], 'role'), pluralize(access_by_type[:user], 'user')].to_sentence

= dropdown_tag(dropdownLabel, options: { toggle_class: "#{toggle_class} js-multiselect", dropdown_class: 'dropdown-menu-user dropdown-menu-selectable', filter: true,
                                    data: { default_label: defaultLabel } })
