- page_title           "#{@merge_request.title} (##{@merge_request.iid})", "Merge Requests"
- page_description     @merge_request.description
- page_card_attributes @merge_request.card_attributes

= render "header_title"

- if params[:view] == 'parallel'
  - fluid_layout true

.merge-request{'data-url' => merge_request_path(@merge_request)}
  = render "projects/merge_requests/show/mr_title"

  .merge-request-details.issuable-details
    = render "projects/merge_requests/show/mr_box"
    .append-bottom-default.mr-source-target.prepend-top-default
      - if @merge_request.open?
        .pull-right
          - if @merge_request.source_branch_exists?
            = link_to "#modal_merge_info", class: "btn btn-sm", "data-toggle" => "modal" do
              = icon('cloud-download fw')
              Check out branch

          %span.dropdown
            %a.btn.btn-sm.dropdown-toggle{ data: {toggle: :dropdown} }
              = icon('download')
              Download as
              %span.caret
            %ul.dropdown-menu
              %li= link_to "Email Patches", merge_request_path(@merge_request, format: :patch)
              %li= link_to "Plain Diff",    merge_request_path(@merge_request, format: :diff)
      .normal
        %span Request to merge
        %span.label-branch= source_branch_with_namespace(@merge_request)
        %span into
        = link_to namespace_project_commits_path(@project.namespace, @project, @merge_request.target_branch), class: "label-branch" do
          = @merge_request.target_branch

    = render "projects/merge_requests/show/how_to_merge"
    %div#mr-state-box{'v-cloak'=> true}
      = render "projects/merge_requests/widget/show.html.haml"

    - if @merge_request.source_branch_exists? && @merge_request.mergeable? && @merge_request.can_be_merged_by?(current_user)
      .light.prepend-top-default
        You can also accept this merge request manually using the
        = succeed '.' do
          = link_to "command line", "#modal_merge_info", class: "how_to_merge_link vlink", title: "How To Merge", "data-toggle" => "modal"

    - if @commits.present?
      %ul.merge-request-tabs.center-top-menu.no-top.no-bottom
        %li.notes-tab
          = link_to namespace_project_merge_request_path(@project.namespace, @project, @merge_request), data: {target: 'div#notes', action: 'notes', toggle: 'tab'} do
            Discussion
            %span.badge= @merge_request.mr_and_commit_notes.user.count
        %li.commits-tab
          = link_to commits_namespace_project_merge_request_path(@project.namespace, @project, @merge_request), data: {target: 'div#commits', action: 'commits', toggle: 'tab'} do
            Commits
            %span.badge= @commits.size
        - if @ci_commit
          %li.builds-tab
            = link_to builds_namespace_project_merge_request_path(@project.namespace, @project, @merge_request), data: {target: '#builds', action: 'builds', toggle: 'tab'} do
              Builds
              %span.badge= @statuses.size
        %li.diffs-tab
          = link_to diffs_namespace_project_merge_request_path(@project.namespace, @project, @merge_request), data: {target: 'div#diffs', action: 'diffs', toggle: 'tab'} do
            Changes
            %span.badge= @merge_request.diffs.size

      .tab-content
        #notes.notes.tab-pane.voting_notes
          .gray-content-block.second-block.oneline-block
            = render 'votes/votes_block', votable: @merge_request

          .row
            %section.col-md-9
              .issuable-discussion
                = render "projects/merge_requests/discussion"
            %aside.col-md-3
              = render 'shared/issuable/sidebar', issuable: @merge_request
            = render 'shared/show_aside'

        #commits.commits.tab-pane
          - # This tab is always loaded via AJAX
        #builds.builds.tab-pane
          - # This tab is always loaded via AJAX
        #diffs.diffs.tab-pane
          - # This tab is always loaded via AJAX

      .mr-loading-status
        = spinner

:javascript
  var mergeObj = {};
  var merge_request;

  merge_request = new MergeRequest({
    action: "#{controller.action_name}"
  });

- if @merge_request.merged? && @merge_request.merge_event
  :javascript
    mergeObj.author = "#{sanitize(@merge_request.merge_event.author.name)}";
    mergeObj.author_link = "#{user_path(@merge_request.merge_event.author)}";
    mergeObj.avatar = "#{@merge_request.merge_event.author.avatar_url(16)}";
    mergeObj.source_branch_unavailable = #{!@merge_request.source_branch_exists? || (params[:delete_source] == 'true')};
    mergeObj.target_branch_url = "#{namespace_project_commits_path(@project.namespace, @project, @merge_request.target_branch)}";
    mergeObj.target_branch = "#{@merge_request.target_branch}";
    mergeObj.removeable_branch = #{@merge_request.can_remove_source_branch?(current_user)};
    mergeObj.remove_source_branch_url = "#{namespace_project_branch_path(@merge_request.source_project.namespace, @merge_request.source_project, @merge_request.source_branch, format: :json)}";
  :javascript


:javascript
  $(function(){
    mergeObj.label = "#{@merge_request.state_human_name}";
    mergeObj.closed = #{@merge_request.closed?};
    mergeObj.open = #{@merge_request.open?};
    mergeObj.locked = #{@merge_request.locked?};
    mergeObj.merged = #{@merge_request.merged?};
    mergeObj.closeURL = "#{merge_request_path(@merge_request, merge_request: { state_event: :close }, format: :json)}";
    mergeObj.reopenURL = "#{merge_request_path(@merge_request, merge_request: {state_event: :reopen }, format: :json)}";
    MR().init(mergeObj);
  });
