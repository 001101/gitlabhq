.mr-state-widget.mr-state-widget-opened{class: merge_request_widget_visibility(@merge_request, "opened","reopened")}
  = render 'projects/merge_requests/widget/heading'
  .mr-widget-body.merge-request-archived{class: ("hidden" unless @project.archived?)}
    = render 'projects/merge_requests/widget/open/archived'
  .mr-widget-body.merge-request-blank{class: ("hidden" unless @merge_request.commits.blank?)}
    = render 'projects/merge_requests/widget/open/nothing'
  .mr-widget-body.merge-request-branch-missing{class: ("hidden" unless @merge_request.branch_missing?)}
    = render 'projects/merge_requests/widget/open/missing_branch'
  .mr-widget-body.merge-request-unchecked{class: ("hidden" unless @merge_request.unchecked?)}
    = render 'projects/merge_requests/widget/open/check'
  .mr-widget-body.merge-request-cannot-be-merged{class: ("hidden" unless @merge_request.cannot_be_merged?)}
    = render 'projects/merge_requests/widget/open/conflicts'
  .mr-widget-body.merge-request-work-in-progress{class: ("hidden" unless @merge_request.work_in_progress?)}
    = render 'projects/merge_requests/widget/open/wip'
  .mr-widget-body.merge-request-merge-when-build-succeeds{class: ("hidden" unless @merge_request.merge_when_build_succeeds?)}
    = render 'projects/merge_requests/widget/open/merge_when_build_succeeds'
  .mr-widget-body.not-allowed{class: ("hidden" if @merge_request.can_be_merged_by?(current_user))}
    = render 'projects/merge_requests/widget/open/not_allowed'
  .mr-widget-body.merge-request-archived.can-be-merged{class: ("hidden" unless @merge_request.can_be_merged?)}
    = render 'projects/merge_requests/widget/open/accept'

  - if @closes_issues.present?
    .mr-widget-footer
      %span
        %i.fa.fa-check
        Accepting this merge request will close #{"issue".pluralize(@closes_issues.size)}
        = succeed '.' do
          != markdown issues_sentence(@closes_issues), pipeline: :gfm
