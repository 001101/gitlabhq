- page_title "Mirror Repository"
%h3.page-title
  Mirror Repository
  .pull-right
    = render "shared/mirror_update_button"
%p.light
  Set up your project to automatically have its branches and tags updated from an upstream repository every hour.

%hr.clearfix

- if @project.mirror?
  - if @project.updating_mirror?
    .alert.alert-info
      %p The repository is being updated...

  - case @project.mirror_last_update_status
  - when :success
    .alert.alert-success
      %p The repository was successfully updated #{time_ago_with_tooltip(@project.mirror_last_successful_update_at)}.
  - when :failed
    .alert.alert-danger
      %p The repository failed to be updated #{time_ago_with_tooltip(@project.mirror_last_update_at)}.
      %pre.prepend-top-10
        :preserve
          #{@project.import_error.try(:strip)}

    - if @project.mirror_ever_updated_successfully?
      .alert.alert-success
        %p The repository was last successfully updated #{time_ago_with_tooltip(@project.mirror_last_successful_update_at)}.

= form_for @project, url: namespace_project_mirror_path(@project.namespace, @project), html: { class: 'form-horizontal' } do |f|
  - if @project.errors.any?
    .alert.alert-danger
      - @project.errors.full_messages.each do |msg|
        %p= msg

  .form-group
    .col-sm-offset-2.col-sm-10
      .checkbox
        = f.label :mirror do
          = f.check_box :mirror
          %strong
            Mirror repository
        .help-block
          Automatically update this project's branches and tags from the upstream repository every hour.

  .form-group
    = f.label :import_url, class: 'control-label' do
      %span Git repository URL
    .col-sm-10
      = f.text_field :import_url, class: 'form-control', placeholder: 'https://username:password@gitlab.company.com/group/project.git'
      .well.prepend-top-20
        %ul
          %li
            The repository must be accessible over <code>http://</code>, <code>https://</code>, <code>ssh://</code> or <code>git://</code>.
          %li
            If your HTTP repository is not publicly accessible, add authentication information to the URL: <code>https://username:password@gitlab.company.com/group/project.git</code>.
          %li
            If your SSH repository is not publicly accessible, add the public SSH key of the GitLab server to the remote repository.
          %li
            The update action will time out after 10 minutes. For big repositories, use a clone/push combination.

  .form-actions
    = f.submit "Save Changes", class: "btn btn-create"
