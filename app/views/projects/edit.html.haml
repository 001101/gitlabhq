- breadcrumb_title s_('ProjectSettings|General Settings')
- page_title s_('ProjectSettings|General')
- @content_class = "limit-container-width" unless fluid_layout
- expanded = Rails.env.test?

.project-edit-container
  %section.settings.general-settings.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        = s_('ProjectSettings|General')
      %button.btn.js-settings-toggle{ type: 'button' }
        = expanded ? _('Collapse') : _('Expand')
      %p
        =  s_('ProjectSettings|Update your project name, description, avatar, and other general settings.')
    .settings-content
      .project-edit-errors
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "edit-project" }, authenticity_token: true do |f|
        %fieldset
          .row
            .form-group.col-md-9
              = f.label :name, class: 'label-light', for: 'project_name_edit' do
                = s_('ProjectSettings|Project name')
              = f.text_field :name, class: "form-control", id: "project_name_edit"

            .form-group.col-md-3
              = f.label :id, class: 'label-light' do
                = s_('ProjectSettings|Project ID')
              = f.text_field :id, class: 'form-control', readonly: true

          .form-group
            = f.label :description, class: 'label-light' do
              = s_('ProjectSettings|Project description')
              %span.light (optional)
            = f.text_area :description, class: "form-control", rows: 3, maxlength: 250

          - unless @project.empty_repo?
            .form-group
              = f.label :default_branch, s_('ProjectSettings|Default branch'), class: 'label-light'
              = f.select(:default_branch, @project.repository.branch_names, {}, {class: 'select2 select-wide'})
        .form-group
          = f.label :tag_list, s_('ProjectSettings|Tagsdescription'), class: 'label-light'
          = f.text_field :tag_list, value: @project.tag_list.sort.join(', '), maxlength: 2000, class: "form-control"
          %p.form-text.text-muted s_('ProjectSettings|Separate tags with commas.')
        %fieldset.features
          %h5.prepend-top-0= _("Project avatar")
          .form-group
            - if @project.avatar?
              .avatar-container.s160.append-bottom-15
                = project_icon(@project.full_path, alt: '', class: 'avatar project-avatar s160')
            - if @project.avatar_in_git
              %p.light
                = _("Project avatar in repository: %{link}").html_safe % { link: @project.avatar_in_git }
            .prepend-top-5.append-bottom-10
              %button.btn.js-choose-project-avatar-button{ type: 'button' }= _("Choose file...")
              %span.file_name.prepend-left-default.js-avatar-filename= _("No file chosen")
              = f.file_field :avatar, class: "js-project-avatar-input hidden"
            .form-text.text-muted= _("The maximum file size allowed is 200KB.")
            - if @project.avatar?
              %hr
              = link_to _('Remove avatar'), project_avatar_path(@project), data: { confirm: _("Avatar will be removed. Are you sure?") }, method: :delete, class: "btn btn-danger btn-inverted"
        = f.submit s_('ProjectSettings|Save changes'), class: "btn btn-success js-btn-save-general-project-settings"

  %section.settings.sharing-permissions.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        = s_('ProjectSettings|Permissions')
      %button.btn.js-settings-toggle{ type: 'button' }
        = expanded ? _('Collapse') : _('Expand')
      %p
        = s_('ProjectSettings|Enable or disable certain project features and choose access levels.')
    .settings-content
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "sharing-permissions-form" }, authenticity_token: true do |f|
        -# haml-lint:disable InlineJavaScript
        %script.js-project-permissions-form-data{ type: "application/json" }= project_permissions_panel_data(@project)
        .js-project-permissions-form
        = f.submit s_('ProjectSettings|Save changes'), class: "btn btn-save"

  %section.settings.merge-requests-feature.no-animate{ class: [('expanded' if expanded), ('hidden' if @project.project_feature.send(:merge_requests_access_level) == 0)] }
    .settings-header
      %h4
        = s_('ProjectSettings|Merge requests')
      %button.btn.js-settings-toggle{ type: 'button' }
        = expanded ? _('Collapse') : _('Expand')
      %p
        = s_('ProjectSettings|Customize your merge request restrictions.')
    .settings-content
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "merge-request-settings-form" }, authenticity_token: true do |f|
        = render 'merge_request_settings', form: f
        = f.submit s_('ProjectSettings|Save changes'), class: "btn btn-save qa-save-merge-request-changes"

  = render 'export', project: @project

  %section.settings.advanced-settings.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        = s_('ProjectSettings|Advanced')
      %button.btn.js-settings-toggle{ type: 'button' }
        = expanded ? _('Collapse') : _('Expand')
      %p
        = s_('ProjectSettings|Perform advanced options such as housekeeping, archiving, renaming, transferring, or removing your project.')
    .settings-content
      .sub-section
        %h4
          = s_('ProjectSettings|Housekeeping')
        %p
          = s_('ProjectSettings|Runs a number of housekeeping tasks within the current repository, such as compressing file revisions and removing unreachable objects.')
        = link_to s_('ProjectSettings|Run housekeeping'), housekeeping_project_path(@project),
            method: :post, class: "btn btn-default"
      - if can? current_user, :archive_project, @project
        .sub-section
          %h4.warning-title
            - if @project.archived?
              = s_('ProjectSettings|Unarchive project')
            - else
              = s_('ProjectSettings|Archive project')
          - if @project.archived?
            %p
              = s_('ProjectSettings|Unarchiving the project will restore people\'s ability to make changes to it.')
              = s_('ProjectSettings|The repository can be committed to, and issues, comments and other entities can be created.')
              %strong 
                = s_('ProjectSettings|Once active this project shows up in the search and on the dashboard.')
            = link_to s_('ProjectSettings|Unarchive project'), unarchive_project_path(@project),
                data: { confirm: s_('ProjectSettings|Are you sure that you want to unarchive this project?') },
                method: :post, class: "btn btn-success"
          - else
            %p
              = s_('ProjectSettings|Archiving the project will make it entirely read-only. It is hidden from the dashboard and doesn\'t show up in searches.')
              %strong
                = s_('ProjectSettings|The repository cannot be committed to, and no issues, comments or other entities can be created.')
            = link_to s_('ProjectSettings|Archive project'), archive_project_path(@project),
                data: { confirm: s_('ProjectSettings|Are you sure that you want to archive this project?') },
                method: :post, class: "btn btn-warning"
      .sub-section.rename-respository
        %h4.warning-title
          = s_('ProjectSettings|Rename repository')
        = render 'projects/errors'
        = form_for([@project.namespace.becomes(Namespace), @project]) do |f|
          .form-group.project_name_holder
            = f.label :name, class: 'label-light' do
              = s_('ProjectSettings|Project name')
            .form-group
              = f.text_field :name, class: "form-control"
          .form-group
            = f.label :path, class: 'label-light' do
              %span
                = s_('ProjectSettings|Path')
            .form-group
              .input-group
                .input-group-prepend
                  .input-group-text
                    #{URI.join(root_url, @project.namespace.full_path)}/
                = f.text_field :path, class: 'form-control'
            %ul
              %li 
                = s_('ProjectSettings|Be careful. Renaming a project\'s repository can have unintended side effects.')
              %li 
                = s_('ProjectSettings|You will need to update your local repositories to point to the new location.')
              - if @project.deployment_platform.present?
                %li 
                = s_('ProjectSettings|Your deployment services will be broken, you will need to manually fix the services after renaming.')
          = f.submit s_('ProjectSettings|Rename project'), class: "btn btn-warning"
      - if can?(current_user, :change_namespace, @project)
        .sub-section
          %h4.danger-title
            = s_('ProjectSettings|Transfer project')
          = form_for([@project.namespace.becomes(Namespace), @project], url: transfer_project_path(@project), method: :put, remote: true, html: { class: 'js-project-transfer-form' } ) do |f|
            .form-group
              = label_tag :new_namespace_id, nil, class: 'label-light' do
                %span
                  = s_('ProjectSettings|Select a new namespace')
              .form-group
                = select_tag :new_namespace_id, namespaces_options(nil), include_blank: true, class: 'select2'
              %ul
                %li
                  = s_('ProjectSettings|Be careful. Changing the project\'s namespace can have unintended side effects.')
                %li
                  = s_('ProjectSettings|You can only transfer the project to namespaces you manage.')
                %li
                  = s_('ProjectSettings|You will need to update your local repositories to point to the new location.')
                %li
                  = s_('ProjectSettings|Project visibility level will be changed to match namespace rules when transferring to a group.')
            = f.submit s_('ProjectSettings|Transfer project'), class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => transfer_project_message(@project) }
      - if @project.forked? && can?(current_user, :remove_fork_project, @project)
        .sub-section
          %h4.danger-title
            = s_('ProjectSettings|Remove fork relationship')
          %p
            = s_('ProjectSettings|This will remove the fork relationship to source project')
            = succeed "." do
              - if @project.fork_source
                = link_to(fork_source_name(@project), project_path(@project.fork_source))
              - else
                = fork_source_name(@project)
          = form_for([@project.namespace.becomes(Namespace), @project], url: remove_fork_project_path(@project), method: :delete, remote: true, html: { class: 'transfer-project' }) do |f|
            %p
              %strong 
                = s_('ProjectSettings|Once removed, the fork relationship cannot be restored and you will no longer be able to send merge requests to the source.')
            = button_to s_('ProjectSettings|Remove fork relationship'), '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_fork_project_message(@project) }
      - if can?(current_user, :remove_project, @project)
        .sub-section
          %h4.danger-title
            = s_('ProjectSettings|Remove project')
          %p
            = s_('ProjectSettings|Removing the project will delete its repository and all related resources including issues, merge requests etc.')
          = form_tag(project_path(@project), method: :delete) do
            %p
              %strong 
                = s_('ProjectSettings|Removed projects cannot be restored!')
            = button_to s_('ProjectSettings|Remove project'), '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_project_message(@project) }

.save-project-loader.hide
  .center
    %h2
      %i.fa.fa-spinner.fa-spin
        = s_('ProjectSettings|Saving project.')
    %p
      = s_('ProjectSettings|Please wait a moment, this page will automatically refresh when ready.')

= render 'shared/confirm_modal', phrase: @project.path
