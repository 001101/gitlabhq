%li.build
  .curve
  .build-content
    - group_status = CommitStatus.where(id: subject).status
    = render_status_with_link('build', group_status)
    .dropdown.inline
      %button.dropdown-menu-toggle{type: 'button', data: {toggle: 'dropdown'}}
        %span.ci-status-text
          = name
        %span.badge= subject.length
      %ul.dropdown-menu.grouped-pipeline-dropdown
        .arrow
        - subject.each do |status|
          -# = render "projects/#{status.to_partial_path}_pipeline", subject: status
          - is_playable = status.playable? && can?(current_user, :update_build, @project)
          %li
            - if is_playable
              = link_to play_namespace_project_build_path(status.project.namespace, status.project, status, return_to: request.original_url), method: :post, title: 'Play' do
                = render_status_with_link('build', 'play')
                .ci-status-text= status.name
            - elsif can?(current_user, :read_build, @project)
              = link_to namespace_project_build_path(status.project.namespace, status.project, status) do
                = render_status_with_link('build', status.status)
                .ci-status-text= status.name
            - else
              = render_status_with_link('build', status.status)
              = ci_icon_for_status(status.status)
