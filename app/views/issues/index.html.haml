= render "issues/head"
- if current_user.private_token   
  = content_for :rss_icon do 
    .rss-icon
      = link_to project_issues_path(@project, :atom, { :private_token => current_user.private_token }) do 
        = image_tag "Rss-UI.PNG", :width => 22, :title => "feed"

%div#issues-table-holder
  .well
    = form_tag project_issues_path(@project), :method => :get, :class => :left do
      = label_tag "open_issues" do 
        = radio_button_tag :f, 0, (params[:f] || "0") == "0", :onclick => "setIssueFilter(this.form, 0)", :id => "open_issues", :class => "status"
        %span.tag.open Open
      = label_tag "closed_issues" do 
        = radio_button_tag :f, 2, params[:f] == "2", :onclick => "setIssueFilter(this.form, 2)", :id => "closed_issues", :class => "status"
        %span.tag.closed Closed
      = label_tag "my_issues" do 
        = radio_button_tag :f, 3, params[:f] == "3", :onclick => "setIssueFilter(this.form, 3)", :id => "my_issues", :class => "status"
        %span To Me
      = label_tag "all_issues" do 
        = radio_button_tag :f, 1, params[:f] == "1", :onclick => "setIssueFilter(this.form, 1)", :id => "all_issues", :class => "status"
        %span All
    = form_tag search_project_issues_path(@project), :method => :get, :remote => true, :id => "issue_search_form", :class => :right  do
      = hidden_field_tag :project_id, @project.id, { :id => 'project_id' }
      = search_field_tag :issue_search, nil, { :placeholder => 'Search', :class => 'issue_search' }

  %table#issues-table
    = render "issues"
  %br
:javascript
  var href       = $('.issue_search').parent().attr('action');
  var last_terms = '';

  var setIssueFilter = function(form, value){
    $.cookie('issue_filter', value, { expires: 140 });
    form.submit();
  }

  $('.issue_search').keyup(function() {
    var terms       = $(this).val();
    var project_id  = $('#project_id').val();
    var status      = $('.status:checked').val();
    if (terms != last_terms) {
      last_terms = terms;

      if (terms.length >= 2 || terms.length == 0) {
        $.get(href, { 'status': status, 'terms': terms, project: project_id  }, function(response) {
          $('#issues-table tbody').html(response);
          setSortable();
        });
      }
    }
  });

  $('.delete-issue').live('ajax:success', function() {
    $(this).closest('tr').fadeOut(); updatePage();});

  function setSortable(){
    $('#issues-table>tbody').sortable({
      axis: 'y',
      dropOnEmpty: false,
      handle: '.handle',
      cursor: 'crosshair',
      items: 'tr',
      opacity: 0.4,
      scroll: true,
      update: function(){
        $.ajax({
        type: 'post',
        data: $('#issues-table>tbody').sortable('serialize'),
        dataType: 'script',
        complete: function(request){
          $('#issues-table>tbody').effect('highlight');
        },
        url: "#{sort_project_issues_path(@project)}"})
        }
      });
  }

  $(function(){
    setSortable();
  });
