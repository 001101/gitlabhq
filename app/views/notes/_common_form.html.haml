.note-form-holder
  = form_for [@project, @note], remote: "true", multipart: true do |f|

    = note_target_fields
    = f.hidden_field :noteable_id
    = f.hidden_field :noteable_type

    %h3.page_title Leave a comment
    -if @note.errors.any?
      .alert-message.block-message.error
        - @note.errors.full_messages.each do |msg|
          %div= msg

    .js-toggler-container
      = f.text_area :note, size: 255, class: 'note_text turn-on js-note-text js-gfm-input'
      .note_preview.js-note-preview.hide.turn-off

      .hint
        .right Comments are parsed with #{link_to "GitLab Flavored Markdown", help_markdown_path, target: '_blank'}.
      .clearfix

      .buttons
        = f.submit 'Add Comment', class: "btn comment-btn grouped js-comment-button"
        %button.btn.grouped.js-note-preview-button.js-toggler-target.turn-on{ data: {url: preview_project_notes_path(@project)} }
          Preview
        %button.btn.grouped.js-note-preview-button.js-toggler-target.turn-off
          Edit

    .note_advanced_opts
      .attachments.right
        %h6.left Attachment:
        %span.file_name File name...

        .input.input_file
          %a.file_upload.btn.small Upload File
          = f.file_field :attachment, class: "input-file"
        %span.hint Any file less than 10 MB

      .notify_opts.right
        %h6.left Notify via email:
        = label_tag :notify do
          = check_box_tag :notify, 1, @note.noteable_type != "Commit"
          %span Project team

        - if @note.notify_only_author?(current_user)
          = label_tag :notify_author do
            = check_box_tag :notify_author, 1 , @note.noteable_type == "Commit"
            %span Commit author
  .clearfix
