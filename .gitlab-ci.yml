image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:ruby-2.3-git-2.7-phantomjs-2.1"

cache:
  key: "ruby-231"
  paths:
  - vendor/ruby

variables:
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"
  # retry tests only in CI environment
  RSPEC_RETRY_RETRY_COUNT: "3"
  RAILS_ENV: "test"
  SIMPLECOV: "true"
  SETUP_DB: "true"
  USE_BUNDLE_INSTALL: "true"
  GIT_DEPTH: "20"
  PHANTOMJS_VERSION: "2.1.1"

before_script:
  - source ./scripts/prepare_build.sh
  - cp config/gitlab.yml.example config/gitlab.yml
  - bundle --version
  - '[ "$USE_BUNDLE_INSTALL" != "true" ] || retry bundle install --without postgres production --jobs $(nproc) $FLAGS'
  - retry gem install knapsack
  - '[ "$SETUP_DB" != "true" ] || bundle exec rake db:drop db:create db:schema:load db:migrate add_limits_mysql'

stages:
- prepare
- test
- post-test
- pages

# Prepare and merge knapsack tests
.knapsack-state: &knapsack-state
  services: []
  variables:
    SETUP_DB: "false"
    USE_BUNDLE_INSTALL: "false"
  cache:
    key: "knapsack"
    paths:
    - knapsack/
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/

knapsack:
  <<: *knapsack-state
  stage: prepare
  script:
    - mkdir -p knapsack/
    - '[[ -f knapsack/rspec_report.json ]] || echo "{}" > knapsack/rspec_report.json'
    - '[[ -f knapsack/spinach_report.json ]] || echo "{}" > knapsack/spinach_report.json'
  tags:
    - gitlab-org
    - 2gb

.use-db: &use-db
  services:
    - mysql:latest
    - redis:alpine

setup-test-env:
  <<: *use-db
  stage: prepare
  script:
    - bundle exec rake assets:precompile 2>/dev/null
    - bundle exec ruby -Ispec -e 'require "spec_helper" ; TestEnv.init'
  artifacts:
    expire_in: 7d
    paths:
      - public/assets
      - tmp/tests
  tags:
    - gitlab-org
    - 2gb

.rspec-knapsack: &rspec-knapsack
  stage: test
  <<: *use-db
  script:
    - JOB_NAME=( $CI_BUILD_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[1]}
    - export CI_NODE_TOTAL=${JOB_NAME[2]}
    - export KNAPSACK_REPORT_PATH=knapsack/rspec_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - cp knapsack/rspec_report.json ${KNAPSACK_REPORT_PATH}
    - knapsack rspec "--color --format documentation"
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/
    - coverage/

.spinach-knapsack: &spinach-knapsack
  stage: test
  <<: *use-db
  script:
    - JOB_NAME=( $CI_BUILD_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[1]}
    - export CI_NODE_TOTAL=${JOB_NAME[2]}
    - export KNAPSACK_REPORT_PATH=knapsack/spinach_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - cp knapsack/spinach_report.json ${KNAPSACK_REPORT_PATH}
    - knapsack spinach "-r rerun" || retry '[[ -e tmp/spinach-rerun.txt ]] && bundle exec spinach -r rerun $(cat tmp/spinach-rerun.txt)'
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/
    - coverage/

.dedicated-runner: &dedicated-runner
  tags:
    - gitlab-org
    - 2gb

.shared-runner: &shared-runner
  tags:
    - shared

rspec 0 20 dedicated:
  <<: *rspec-knapsack
  <<: *dedicated-runner

rspec 1 20 dedicated:
  <<: *rspec-knapsack
  <<: *dedicated-runner

spinach 0 10 dedicated:
  <<: *spinach-knapsack
  <<: *dedicated-runner

spinach 1 10 dedicated:
  <<: *spinach-knapsack
  <<: *dedicated-runner

rspec 0 20 shared:
  <<: *rspec-knapsack
  <<: *shared-runner

rspec 1 20 shared:
  <<: *rspec-knapsack
  <<: *shared-runner

spinach 0 10 shared:
  <<: *spinach-knapsack
  <<: *shared-runner

spinach 1 10 shared:
  <<: *spinach-knapsack
  <<: *shared-runner
