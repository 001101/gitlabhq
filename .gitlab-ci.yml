image: "dev.gitlab.org:5005/gitlab/gitlab-build-images:ruby-2.3.3-git-2.7-phantomjs-2.1-node-7.1"

cache:
  key: "ruby-233"
  paths:
  - vendor/ruby

variables:
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"
  # retry tests only in CI environment
  RSPEC_RETRY_RETRY_COUNT: "3"
  RAILS_ENV: "test"
  SIMPLECOV: "true"
  SETUP_DB: "true"
  USE_BUNDLE_INSTALL: "true"
  GIT_DEPTH: "20"
  PHANTOMJS_VERSION: "2.1.1"
  GET_SOURCES_ATTEMPTS: "3"

before_script:
  - source ./scripts/prepare_build.sh
  - cp config/gitlab.yml.example config/gitlab.yml
  - bundle --version
  - '[ "$USE_BUNDLE_INSTALL" != "true" ] || retry bundle install --without postgres production --jobs $(nproc) $FLAGS'
  - retry gem install knapsack
  - '[ "$SETUP_DB" != "true" ] || bundle exec rake db:drop db:create db:schema:load db:migrate add_limits_mysql'

stages:
- prepare
- test

# Predefined scopes
.dedicated-runner: &dedicated-runner
  tags:
    - gitlab-org

.knapsack-state: &knapsack-state
  services: []
  variables:
    SETUP_DB: "false"
    USE_BUNDLE_INSTALL: "false"
  cache:
    key: "knapsack"
    paths:
    - knapsack/
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/

.use-db: &use-db
  services:
    - mysql:latest
    - redis:alpine

.rspec-knapsack: &rspec-knapsack
  stage: test
  <<: *dedicated-runner
  <<: *use-db
  script:
    - JOB_NAME=( $CI_BUILD_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[1]}
    - export CI_NODE_TOTAL=${JOB_NAME[2]}
    - export KNAPSACK_REPORT_PATH=knapsack/rspec_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - cp knapsack/rspec_report.json ${KNAPSACK_REPORT_PATH}
    - knapsack rspec "--color --format documentation"
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/
    - coverage/

.spinach-knapsack: &spinach-knapsack
  stage: test
  <<: *dedicated-runner
  <<: *use-db
  script:
    - JOB_NAME=( $CI_BUILD_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[1]}
    - export CI_NODE_TOTAL=${JOB_NAME[2]}
    - export KNAPSACK_REPORT_PATH=knapsack/spinach_node_${CI_NODE_INDEX}_${CI_NODE_TOTAL}_report.json
    - export KNAPSACK_GENERATE_REPORT=true
    - cp knapsack/spinach_report.json ${KNAPSACK_REPORT_PATH}
    - knapsack spinach "-r rerun" || retry '[[ -e tmp/spinach-rerun.txt ]] && bundle exec spinach -r rerun $(cat tmp/spinach-rerun.txt)'
  artifacts:
    expire_in: 31d
    paths:
    - knapsack/
    - coverage/

# Prepare and merge knapsack tests

setup-test-env:
  <<: *use-db
  <<: *dedicated-runner
  stage: prepare
  script:
    - node --version
    - yarn --version
    - yarn install --pure-lockfile
    - yarn check # ensure that yarn.lock matches package.json
    - bundle exec rake gitlab:assets:compile
    - bundle exec ruby -Ispec -e 'require "spec_helper" ; TestEnv.init'
  artifacts:
    expire_in: 7d
    paths:
      - node_modules
      - public/assets
      - tmp/tests

rspec:
  stage: test
  <<: *dedicated-runner
  <<: *use-db
  script:
    - JOB_NAME=( $CI_BUILD_NAME )
    - export CI_NODE_INDEX=${JOB_NAME[1]}
    - export CI_NODE_TOTAL=${JOB_NAME[2]}
    - rspec spec/features/issues/filtered_search/visual_tokens_spec.rb
  artifacts:
    expire_in: 31d
    when: always
    paths:
    - coverage/
    - tmp/capybara/

