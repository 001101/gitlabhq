namespace :gitlab do
  desc 'Generates JavaScript file with backend routes'
  task routes_javascript: :gitlab_environment do
    def javascript_placeholders(params)
      params.map { |param| "${params.#{param.to_s.camelize(:lower)}}" }
    end

    all_routes = []

    internal_routes = Rails.application.routes.routes.named_routes
    internal_routes.each do |name, route|
      params = route.parts
      path = route.format(Hash[params.zip(javascript_placeholders(params))])
      path = path.gsub(/%7B(.+?)%7D/, '{\1}') # undo escaping of JavaScript placeholdes
      all_routes.push(["#{name}_path", path, !params.empty?])
    end

    api_routes = Array(Grape::API.decorated_routes[0])
    api_routes.each do |route|
      Array(route.route_options[:version]).each do |api_version|
        params = route.route_options[:params].keys
        values = Hash[params.zip(javascript_placeholders(params))].merge(version: api_version)
        path = route.path_segments_with_values(values).join('/')
        path = path.gsub(/\(.+?\)/, '') # remove optional segments
        name = route.path_helper_name({ version: api_version, format: route.extension })
        all_routes.push([name, path, !params.empty?])
      end
    end

    all_routes.sort_by! { |route| route.first }

    output_path = File.join(Rails.root, 'app', 'assets', 'javascripts', 'routes.js')
    File.open(output_path, 'w') do |f|
      f.write "/* eslint-disable camelcase */\n\n"
      f.write "// This file was generated by bin/rake gitlab:routes_javascript\n"
      all_routes.each do |route|
        name, path, has_params = route
        if has_params
          f.write "export const #{name} = (params) => `#{path}`;\n"
        else
          f.write "export const #{name} = () => '#{path}';\n"
        end
      end
    end
  end
end
