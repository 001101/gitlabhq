- expanded = Rails.env.test?
- import_data = @project.import_data || @project.build_import_data
- protocols = AddressableUrlValidator::DEFAULT_OPTIONS[:protocols].join('|')

%section.settings.project-mirror-settings.no-animate{ class: ('expanded' if expanded) }
  .settings-header
    %h4
      Mirroring repositories
    %button.btn.js-settings-toggle
      = expanded ? 'Collapse' : 'Expand'
    %p
      Set up your project to automatically push and/or pull changes to/from another repository. Branches, tags, and commits will be synced automatically.
      = link_to 'Read more', help_page_path('workflow/repository_mirroring'), target: '_blank'

  .settings-content
    = form_for @project, url: project_mirror_path(@project), html: { class: 'gl-show-field-errors js-mirror-form', autocomplete: 'false', data: { project_mirror_endpoint: ssh_host_keys_project_mirror_path(@project, :json) } } do |f|
      .panel.panel-default
        .panel-heading
          %h3.panel-title Mirror a repository
        .panel-body
          %div= form_errors(@project)

          = render 'shared/mirror_update_button'
          = render 'projects/mirrors/pull/mirror_update_fail'

          .form-group.has-feedback
            = label_tag :url, 'Git repository URL', class: 'label-light-but-actually-light-i-promise'
            = text_field_tag :url, nil, class: 'form-control js-mirror-url js-repo-url', placeholder: 'Input your repository URL', required: 'required', pattern: "(#{protocols}):\/\/.+"

          = render 'projects/mirrors/instructions'

          .form-group
            = label_tag :mirror_direction, 'Mirror direction', class: 'label-light-but-actually-light-i-promise'
            = select_tag :mirror_direction, options_for_select([['Push', 'push'], ['Pull', 'pull']]), class: 'form-control js-mirror-direction'

          .js-form-insertion-point

          %template.js-push-mirrors-form
            = f.fields_for :remote_mirrors, @remote_mirror do |rm_f|
              = rm_f.hidden_field :enabled, value: '1'
              = rm_f.hidden_field :url, class: 'js-mirror-url-hidden', required: 'required', pattern: "(#{protocols}):\/\/.+"
              = rm_f.hidden_field :only_protected_branches, class: 'js-mirror-protected-hidden'

          %template.js-pull-mirrors-form
            = f.hidden_field :mirror, value: '1'
            = f.hidden_field :username_only_import_url, class: 'js-mirror-url-hidden', required: 'required', pattern: "(#{protocols}):\/\/.+"
            = f.hidden_field :only_mirror_protected_branches, class: 'js-mirror-protected-hidden'

            = f.fields_for :import_data, import_data do |import_form|
              = render partial: 'projects/mirrors/pull/ssh_host_keys', locals: { f: import_form }
              = render partial: 'projects/mirrors/pull/authentication_method', locals: { f: import_form }

            .form-group
              = f.label :mirror_user_id, 'Mirror user', class: 'label-light-but-actually-light-i-promise'
              = f.select(:mirror_user_id, options_for_mirror_user, {}, class: 'js-mirror-user select2 lg', required: true )
              .help-block
                This user will be the author of all events in the activity feed that are the result of an update,
                like new branches being created or new commits being pushed to existing branches.
                You can only assign yourself to be the mirror user.

            .form-group
              = f.check_box :mirror_overwrites_diverged_branches, class: 'pull-left', checked: false
              .prepend-left-20
                = f.label :mirror_overwrites_diverged_branches, 'Overwrite diverged branches', class: 'label-light-but-actually-light-i-promise'
                .help-block
                  If disabled, a diverged local branch will not be automatically updated with commits from its remote counterpart,
                  to prevent local data loss. If the default branch (#{@project.default_branch}) has diverged and cannot be updated,
                  mirroring will fail. Other diverged branches are silently ignored.

            - if @project.builds_enabled?
              = render 'shared/mirror_trigger_builds_setting', f: f, checked: false

          .form-group
            = check_box_tag :only_protected_branches, '1', false, class: 'pull-left js-mirror-protected'
            .prepend-left-20
              = label_tag :only_protected_branches, 'Only mirror protected branches', class: 'label-light-but-actually-light-i-promise'
              = link_to icon('question-circle'), help_page_path('user/project/protected_branches')

        .panel-footer
          = f.submit 'Mirror repository', class: 'btn btn-create', name: :update_remote_mirror

    .panel.panel-default
      %table.table.table-bordered
        %thead
          %tr
            %th= "Mirrored repositories (#{mirror_repositories_count})"
            %th Direction
            %th Last update
        %tbody
          - if @project.username_only_import_url.present?
            %tr
              %td= @project.username_only_import_url
              %td Pull
              %td= @project.mirror_last_update_at || 'Never'
          - @project.remote_mirrors.each do |mirror|
            - if mirror.safe_url.present?
              %tr
                %td= mirror.safe_url
                %td Push
                %td= mirror.last_update_at || 'Never'