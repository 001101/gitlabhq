- expanded = Rails.env.test?

%section.settings.project-mirror-settings.no-animate{ class: ('expanded' if expanded) }
  .settings-header
    %h4
      Mirroring repositories
    %button.btn.js-settings-toggle
      = expanded ? 'Collapse' : 'Expand'
    %p
      Set up your project to automatically push and/or pull changes to/from another repository. Branches, tags, and commits will be synced automatically.
      = link_to 'Read more', help_page_path('workflow/repository_mirroring'), target: '_blank'

  .settings-content
    = form_for @project, url: project_mirror_path(@project) do |f|
      .panel.panel-default
        .panel-heading
          %h3.panel-title Mirror a repository
        .panel-body
          %div
            = form_errors(@project)

          = f.fields_for :remote_mirrors, @remote_mirror do |rm_form|
            .form-group
              = rm_form.check_box :enabled, class: "pull-left"
              .prepend-left-20
                = rm_form.label :enabled, "Remote mirror repository", class: "label-light append-bottom-0"
                %p.light.append-bottom-0
                  Automatically update the remote mirror's branches, tags, and commits from this repository every time someone pushes to it.

            .form-group.has-feedback
              = rm_form.label :url, "Git repository URL", class: "label-light"
              = rm_form.text_field :url, class: "form-control", placeholder: 'https://username:password@gitlab.company.com/group/project.git'

              = render "projects/mirrors/instructions"

            .form-group
              = label_tag :mirror_direction, "Mirror direction", class: "label-light"
              = select_tag :mirror_direction, [['Push', 'push'], ['Pull', 'pull'], ['Push & Pull', 'push-pull']], class: "form-control"

        .panel-footer
          = f.submit 'Mirror repository', class: 'btn btn-create', name: 'update_remote_mirror'

    .panel.panel-default
      %table.table.table-bordered
        %thead
          %tr
            %th= "Mirrored repositories (#{@project.remote_mirrors.size})"
            %th Direction
            %th Last update
        %tbody
          %tr
            %td= @project
            %td Pull
            %td= @project
          - @project.remote_mirrors.each do |mirror|
            %tr
              %td= mirror.safe_url
              %td Push
              %td= mirror.last_update_at